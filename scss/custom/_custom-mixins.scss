@function white($opacity){
    @return rgba(255,255,255,$opacity)
}

@mixin white($opacity){
    background-color: rgba(255,255,255,$opacity)
}


@function light($opacity){
    @return rgba(242,243,242,$opacity)
}

@mixin light($opacity){
    background-color: rgba(242,243,242,$opacity)
}


@mixin retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}


$phone-width: $screen-xs;
$tablet-width: $screen-md;
$desktop-width: $screen-lg;

// USAGE
// @include tablet {
//    font-size: 18px;
//  }

//  @include desktop {
//    font-size: 20px;
//  }


@mixin mobilelast {
  @media ( min-width: 0px) and ( max-width: #{$screen-sm-min}) {
    @content;
  }
}


@mixin tabletonly {
  @media ( $screen-xs-min) and ( max-width: #{$screen-md-min}) {
    @content;
  }
}


@mixin phone {
  @media (min-width: #{$screen-xs-min}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$screen-sm-min}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$screen-md-min}) {
    @content;
  }
}

@mixin cta-underline($color) {
	@extend %cta-underline;
	@include add-important(color, $color);
	  &:after {
	  	@include add-important(background-color, $color);
	  }
	  &:hover {
	  	@include add-important(color, $color);
	  }

}

@mixin zoomy ($zoom) {
  zoom: $zoom; /* IE */
-moz-transform: scale($zoom); /* Firefox */
-moz-transform-origin: 0 0;
-o-transform: scale($zoom); /* Opera */
-o-transform-origin: 0 0;
-webkit-transform: scale($zoom); /* Safari And Chrome */
-webkit-transform-origin: 0 0;
transform: scale($zoom); /* Standard Property */
transform-origin: 0 0;  /* Standard Property */
}

@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          	transform: $transforms;
}


@mixin add-important($property, $value)  {
    @if $overwrite-cms {
           #{$property}:$value !important;
        } @else {
            #{$property}:$value;
        }

}